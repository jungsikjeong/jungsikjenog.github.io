{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/React","result":{"pageContext":{"currentCategory":"React","categories":["All","prisma","Supabase","next.js","etc","css","React","stepByStep","javascript","vue","TIL","mui"],"edges":[{"node":{"id":"e9351a11-f084-5e2c-876b-5784433afb09","excerpt":"Memoization useMemo와 useCallback은 메모제이션된 값 혹은 함수를 반환하기 때문에 메모제이션 개념을 먼저 알고가자. 메모제이션이란 하는 프로그래밍 기법이다. 다음과 같은 장점이있다. 중복 연산을 피할 수 있다. 메모리를 조금 더 쓰더라도 애플리케이션의 성능을 최적화 할 수 있다. useMemo 메모제이션된 을 반환하는 함수다. 불필요한 연산을 방지해준다.  값이 변하면 ()=>fn 함수를 실행하고,\r\n그 함수의 반환값을 반환 해준다. deps dependency의 약자로, 의존성을 뜻한다.\r\nuseMemo가 이 deps 의존하고 있다는것을 뜻한다. useCallback 메모제이션된 를 반환해준다. 자식 컴포넌트에 props로 함수를 전달할 때 사용된다. 외부에서 값을 가져오는 api를 호출할 때 사용된다. 자식 컴포넌트에 props로 함수를 전달할 때 사용하는 경우 위의 코드를 useCallback를 사용해서 onSave라는 함수를 재사용하는 것으로 자식 컴…","fields":{"slug":"/React/"},"frontmatter":{"categories":"React","title":"useMemo와 useCallback 차이","date":"February 19, 2024"}},"next":{"fields":{"slug":"/StepBystep/StepBystep02/"}},"previous":{"fields":{"slug":"/NextJs/Nextjs00/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}