{"componentChunkName":"component---src-templates-blog-template-js","path":"/javascript/javascript02/","result":{"data":{"cur":{"id":"eed546dd-e460-5550-9bd2-5440fe60a388","html":"<blockquote>\n<p><code class=\"language-text\">요점만 말해</code> 부분만이라도 읽어보세요!</p>\n</blockquote>\n<h2 id=\"클로저\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80\" aria-label=\"클로저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저</h2>\n<blockquote>\n<p>핵심 요약</p>\n</blockquote>\n<ul>\n<li>외부 변수를 기억하고 이 외부 변수에 접근할 수 있는 함수를 의미한다.</li>\n<li>자바스크립트에선 모든 함수가 자연스럽게 클로저가 된다. (예외가 있긴함)</li>\n</ul>\n<br/>\n<h3 id=\"클로저의-개념\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"클로저의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저의 개념</h3>\n<p>클로저는 내부 함수에서 외부 함수의 범위에 대한 접근을 제공하는 개념이다.<br/>\r\n자바스크립트에서 클로저는 함수 생성 시 <code class=\"language-text\">함수가 생성될 때 마다 생성된다.</code> - 그렇기 때문에 <code class=\"language-text\">자바스크립트에선 모든 함수가 자연스럽게 클로저가 된다.</code></p>\n<p>다음은 mdn에서 긁어온 코드이다.<br/>\r\n어휘적 범위 지정(렉시컬 스코프)환경을 고려해서 살펴보면..</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Mozilla'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// name은 init에 의해 생성된 지역 변수이다.</span>\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">displayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// displayName() 은 내부 함수이며, 클로저다.</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 부모 함수에서 선언된 변수를 사용한다.</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">displayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의코드를 간단하게 풀어보자면,</p>\n<p>중첩함수인 <code class=\"language-text\">displayName()</code> 내부엔 자신만의 지역변수가 없지만\r\n내부 함수에서 외부 함수에 접근할 수 있기 때문에\r\n<code class=\"language-text\">init()</code>함수에 선언된 지역 변수인 name에 접근할 수 있는 것 이다.\r\n이렇게 내부에서 외부에 접근할 수 있는것. 이것을 <code class=\"language-text\">클로저</code>의 개념이다.</p>\n<h3 id=\"조금-더-깊숙히\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B8%88-%EB%8D%94-%EA%B9%8A%EC%88%99%ED%9E%88\" aria-label=\"조금 더 깊숙히 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조금 더 깊숙히</h3>\n<blockquote>\n<p>속담에 호랑이를 잡기 위해선 호랑이 굴로 들어가야한다고 한다.<br/>\r\n클로저라는 호랑이를 잡기위해 호랑이 굴로 들어가보자.</p>\n</blockquote>\n <br/>\r\n 아래의 코드는,위에있는 코드와 유사하다. 결과 또한 똑같다.\r\n 다른점은 displayName() 내부 함수가 실행되기 전에 외부 함수에서 반환된다는 점이다.\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Mozilla'</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">displayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> displayName<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> myFunc <span class=\"token operator\">=</span> <span class=\"token function\">makeFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>왜 그런걸까?</p>\n<p>이러한 결과값에 대해서 mdn에서는 자바스크립트 함수가 클로저를 형성하기 때문이라고한다. (조금 더 자세한 사항이 궁금하다면 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures\">여기를 참조</a>)</p>\n<p>똑같은 말이지만, dispalyName함수를 먼저 리턴을 해주고있는데, dispalyName()함수내부엔 name이없다. 그러면 외부로 거슬러올라가서 <code class=\"language-text\">name</code>이란 지역변수에서 가져오게되는것이다.</p>\n<br/>\n<h2 id=\"environment\" style=\"position:relative;\"><a href=\"#environment\" aria-label=\"environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[[Environment]]</h2>\n<blockquote>\n<p>요약</p>\n</blockquote>\n<ul>\n<li>\n<p>자바스크립트의 함수는 숨긴 프로퍼티인 <code class=\"language-text\">[[Environment]]</code>를 이용해 자신이 어디서 만들어졌는지를 기억한다.</p>\n</li>\n<li>\n<p>함수 본문에선 <code class=\"language-text\">[[Environment]]</code>를 이용해 외부 변수에 접근한다.</p>\n</li>\n</ul>\n<br />\n<h2 id=\"environment-개념\" style=\"position:relative;\"><a href=\"#environment-%EA%B0%9C%EB%85%90\" aria-label=\"environment 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[[Environment]] 개념</h2>\n<p>모든 함수는 함수가 생성된 곳의 렉시컬 환경을 기억한다고 한다.</p>\n<blockquote>\n<p>렉시컬 환경이란? 코드가 어디서 실행되며 주변에 어떤 코드가 있는지를 뜻하며 이를 구현한 것이 실행컨텍스트이다.</p>\n</blockquote>\n<p>함수는 <code class=\"language-text\">[[Environment]]</code>라 불리는 숨김 프로퍼티를 갖는데, 여기에 함수가 만들어진 곳의 렉시컬 환경에 대한 참조가 저장된다.</p>\n<br/>\n<h3 id=\"클로저와-유사하다\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-%EC%9C%A0%EC%82%AC%ED%95%98%EB%8B%A4\" aria-label=\"클로저와 유사하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저와 유사하다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>클로저도 내부함수가 외부함수를 참조할수 있다고했다.\r\n<code class=\"language-text\">[[Environment]]</code>프로퍼티 개념도 이와 똑같다고 생각한다.</p>\n<p><code class=\"language-text\">makeCounter()</code>를 호출할 때마다 새로운 렉시컬 환경 객체가 만들어지고, 여기에 <code class=\"language-text\">makeCounter</code>를 실행하는데 필요한 변수들이 저장된다.</p>\n<p>위의 예시코드는 makeCounter함수 안의 중첩함수가 외부변수인 count의 외부렉시컬환경을 참조하여 중첩함수의 내부렉시컬환경에 참조시킨것이다.</p>\n<br/>\n<h2 id=\"요점만-말해\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%A0%90%EB%A7%8C-%EB%A7%90%ED%95%B4\" aria-label=\"요점만 말해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요점만 말해</h2>\n<ul>\n<li>\n<p>클로저(Closure)는 프로그래밍 언어에서 함수와 그 함수가 선언된 렉시컬 환경(lexical environment) 사이의 조합을 나타냄</p>\n</li>\n<li>\n<p>클로저는 함수가 자신이 선언된 범위 외부의 변수에 접근할 수 있는 특성을 갖고있음</p>\n</li>\n<li>\n<p>자바스크립트에서는 모든 함수가 클로저의 특성을 지니고 있음</p>\n</li>\n<li>\n<p>이는 함수가 선언될 때의 렉시컬 환경에 대한 참조를 유지하며, 이러한 렉시컬 환경은 함수가 호출되어도 사라지지 않음</p>\n</li>\n<li>\n<p>함수가 클로저인 이유는 함수가 선언될 때의 렉시컬 환경에 대한 참조가 함수 객체의 내부 [[Environment]] 프로퍼티에 저장되기 때문임</p>\n</li>\n<li>\n<p>이 [[Environment]] 프로퍼티는 해당 함수가 정의된 스코프의 렉시컬 환경을 가리키며, 함수가 외부 변수에 접근할 때 이 렉시컬 환경을 참조하여 변수에 접근함</p>\n</li>\n<li>\n<p>렉시컬 환경은 변수와 그 변수에 대한 값 또는 참조를 매핑하는데 사용되며, 이를 통해 클로저가 외부 변수에 접근하고 변경할 수 있게 되는 것임</p>\n</li>\n</ul>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<p><a href=\"https://ko.javascript.info/closure\">모던 자바스크립트</a>\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures\">mdn</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80\">클로저</a></p>\n<ul>\n<li><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%9D%98-%EA%B0%9C%EB%85%90\">클로저의 개념</a></li>\n<li><a href=\"#%EC%A1%B0%EA%B8%88-%EB%8D%94-%EA%B9%8A%EC%88%99%ED%9E%88\">조금 더 깊숙히</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#environment\">[[Environment]]</a></p>\n</li>\n<li>\n<p><a href=\"#environment-%EA%B0%9C%EB%85%90\">[[Environment]] 개념</a></p>\n<ul>\n<li><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-%EC%9C%A0%EC%82%AC%ED%95%98%EB%8B%A4\">클로저와 유사하다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%94%EC%A0%90%EB%A7%8C-%EB%A7%90%ED%95%B4\">요점만 말해</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EC%A1%B0\">참조</a></p>\n</li>\n</ul>\n</div>","excerpt":"부분만이라도 읽어보세요! 클로저 핵심 요약 외부 변수를 기억하고 이 외부 변수에 접근할 수 있는 함수를 의미한다. 자바스크립트에선 모든 함수가 자연스럽게 클로저가 된다. (예외가 있긴함) 클로저의 개념 클로저는 내부 함수에서 외부 함수의 범위에 대한 접근을 제공하는 개념이다.\r\n자바스크립트에서 클로저는 함수 생성 시  - 그렇기 때문에  다음은 mdn에서 긁어온 코드이다.\r\n어휘적 범위 지정(렉시컬 스코프)환경을 고려해서 살펴보면.. 위의코드를 간단하게 풀어보자면, 중첩함수인  내부엔 자신만의 지역변수가 없지만\r\n내부 함수에서 외부 함수에 접근할 수 있기 때문에\r\n함수에 선언된 지역 변수인 name에 접근할 수 있는 것 이다.\r\n이렇게 내부에서 외부에 접근할 수 있는것. 이것을 의 개념이다. 조금 더 깊숙히 속담에 호랑이를 잡기 위해선 호랑이 굴로 들어가야한다고 한다.\r\n클로저라는 호랑이를 잡기위해 호랑이 굴로 들어가보자. 왜 그런걸까? 이러한 결과값에 대해서 mdn에서는 자바스크…","frontmatter":{"date":"December 05, 2023","title":"클로저와 [[Environment]]","categories":"javascript","author":"정중식","emoji":"✍"},"fields":{"slug":"/javascript/javascript02/"}},"next":{"id":"cf2c997a-6d81-5e3f-8c6c-5c1528caaec9","html":"<h2 id=\"12월-4일\" style=\"position:relative;\"><a href=\"#12%EC%9B%94-4%EC%9D%BC\" aria-label=\"12월 4일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12월 4일</h2>\n<p>팀 프로젝트 작업과 모던 자바스크립트를 공부했다.</p>\n<ul>\n<li>\n<p>제품 상세페이지 캐러셀을 mui에 내장되어있는거를 사용하지않고, <a href=\"https://swiperjs.com/\">Swiper</a> 라이브러리를 사용하기로 해서 적용시켜줬다.\r\n금방 적용시킬줄 알았는데 생각보다 시간을 잡아먹었다.\r\n이제 프로그래스바를 만들면되는데 내장되어있는거를 사용하여 구현은 했으나, 디자인과는 좀 레이아웃이 달라서 이 부분을 수정하는데에 또 시간이 들것같다.</p>\n</li>\n<li>\n<p>모던 자바스크립트 <code class=\"language-text\">나머지 매개변수와 전개 구문</code>파트를 공부했다.</p>\n<ul>\n<li>스프레드 문법으로 배열을 복사하게되면, 참조하는 값이 달라진다.(포인터가 달라짐)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12월-5일\" style=\"position:relative;\"><a href=\"#12%EC%9B%94-5%EC%9D%BC\" aria-label=\"12월 5일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12월 5일</h2>\n<p>모던자바스크립트 변수의 유효범위와 클로저와 함수의 렉시컬환경및변수와 [[Environment]]의 연관성 학습 및 정리</p>","frontmatter":{"date":"December 04, 2023","title":"기록4","categories":"TIL","author":"정중식","emoji":"✍"},"fields":{"slug":"/TIL/TIL4/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jungsikjeong.github.io","comments":{"utterances":{"repo":"jungsikjeong/jungsikjeong.github.io"}}}}},"pageContext":{"slug":"/javascript/javascript02/","nextSlug":"/TIL/TIL4/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}