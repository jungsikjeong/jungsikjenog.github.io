{"componentChunkName":"component---src-templates-blog-template-js","path":"/vue/vue03/","result":{"data":{"cur":{"id":"fa7397df-b906-5dd4-8ca7-4ce6770a6a30","html":"<h2 id=\"npm-i-mitt\" style=\"position:relative;\"><a href=\"#npm-i-mitt\" aria-label=\"npm i mitt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm i mitt</h2>\n<p><code class=\"language-text\">npm i mitt</code></p>\n<p>라이브러리니깐\r\n터미널로 설치해주자.</p>\n<p>Vuex의 개념까지 알고 다시와봤는데, mitt는 리액트로따지면 contextAPI같은거라고 생각함</p>\n<h2 id=\"사용\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9\" aria-label=\"사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용</h2>\n<ul>\n<li>main.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> mitt <span class=\"token keyword\">from</span> <span class=\"token string\">'mitt'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> emitter <span class=\"token operator\">=</span> <span class=\"token function\">mitt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> emitter<span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">app.config.globalProperties</code>는 글로벌한 변수 보관함이라고 생각하자.</p>\n<p>모든 컴포넌트에서 자주 사용하는 라이브러리가있다면 등록해서 사용할 수있다.\r\n예를들면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> mitt <span class=\"token keyword\">from</span> <span class=\"token string\">'mitt'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> emitter <span class=\"token operator\">=</span> <span class=\"token function\">mitt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> emitter<span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 해주면\r\nimport axios 해 올 필요 없이 this.axios로 사용이 가능해진다.</p>\n<p>mitt라이브러리로 데이터를 전송할 때 다음과 같이 두가지만 기억하면된다.<br/></p>\n<ol>\n<li>this.emitter.emit()로 전송하고,</li>\n<li>this.emitter.on()으로 수신한다.</li>\n</ol>\n<p>이제 본격적으로 mitt라이브러리를 사용해서 컴포넌트간 데이터를 전송해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div\r\n    @click<span class=\"token operator\">=</span><span class=\"token string\">\"fire\"</span>\r\n  <span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'FilterBox'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n <span class=\"token operator\">...</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'작명'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'데이터'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\r\n<span class=\"token operator\">...</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">this.emitter.emit('작명','데이터')</code> 이런식으로 데이터를 쏴주고,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\r\n <span class=\"token operator\">...</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n     <span class=\"token operator\">...</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'작명'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n   <span class=\"token operator\">...</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\r\n<span class=\"token operator\">...</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\r\n</code></pre></div>\n<p><code class=\"language-text\">this.emitter.on()</code>으로 데이터를 수신해주면 된다.\r\n중요한건 항상 mounted(){}안에서 사용해줘야한다.</p>\n<p>그리고 개인적인 생각인데</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'작명'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이거 말고</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'작명'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 사용해주는 이유는..<br>\n크게 상관은없지만 자바스크립트의 this때문이 아닌가 싶다.\r\n()=>{}의 this는 함수 바깥의 데이터를 가르키고,\r\nfunction(){}의 this는 함수 안쪽의 데이터를 가르키기 때문이지않을까..</p>\n<h2 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h2>\n<p>데이터를 전송할때의 name도 겹치게되면 안되고 하기때문에\r\n많이 사용하게되면 관리하는게 힘들어진다.</p>\n<p>대체품으로는: Vuex가 있다고한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#npm-i-mitt\">npm i mitt</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9\">사용</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</div>","excerpt":"npm i mitt  라이브러리니깐\r\n터미널로 설치해주자. Vuex의 개념까지 알고 다시와봤는데, mitt는 리액트로따지면 contextAPI같은거라고 생각함 사용 main.js 는 글로벌한 변수 보관함이라고 생각하자. 모든 컴포넌트에서 자주 사용하는 라이브러리가있다면 등록해서 사용할 수있다.\r\n예를들면 이렇게 해주면\r\nimport axios 해 올 필요 없이 this.axios로 사용이 가능해진다. mitt라이브러리로 데이터를 전송할 때 다음과 같이 두가지만 기억하면된다. this.emitter.emit()로 전송하고, this.emitter.on()으로 수신한다. 이제 본격적으로 mitt라이브러리를 사용해서 컴포넌트간 데이터를 전송해보자.  이런식으로 데이터를 쏴주고, 으로 데이터를 수신해주면 된다.\r\n중요한건 항상 mounted(){}안에서 사용해줘야한다. 그리고 개인적인 생각인데 이거 말고 이렇게 사용해주는 이유는.. 크게 상관은없지만 자바스크립트의 this때문이 아닌가 싶…","frontmatter":{"date":"January 01, 2023","title":"mitt - 컴포넌트간 데이터 전송","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue03/"}},"next":{"id":"3a9fedd2-16a6-5db8-92b5-9ff7c16b086e","html":"<h2 id=\"actions\" style=\"position:relative;\"><a href=\"#actions\" aria-label=\"actions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>actions</h2>\n<blockquote>\n<p>Vuex..</p>\n</blockquote>\n<ul>\n<li>ajax하는 곳</li>\n<li>혹은 오래걸리는 작업들에 사용</li>\n</ul>\n<p>사용예시</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n     <span class=\"token operator\">...</span>\r\n     <span class=\"token literal-property property\">posts</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\r\n     <span class=\"token literal-property property\">moreNumber</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\">// 수정방법 정의하는 곳</span>\r\n  <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n     <span class=\"token function\">setPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> payload</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      state<span class=\"token punctuation\">.</span>moreNumber<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n      state<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n   <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// context는 $store를 뜻함</span>\r\n    <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      axios\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://codingapple1.github.io/vue/more</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>moreNumber<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span>\r\n        <span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          context<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'setPost'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span></code></pre></div>\n<br />\n<h3 id=\"핵심-키워드\" style=\"position:relative;\"><a href=\"#%ED%95%B5%EC%8B%AC-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\"핵심 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핵심 키워드</h3>\n<ol>\n<li><code class=\"language-text\">actions()</code>안에서 store의 state를 가져다 쓰려면 <code class=\"language-text\">context</code>를 사용해서 불러오자.</li>\n<li>mutations안의 함수를 사용할땐 <code class=\"language-text\">context.commit('함수', 데이터);</code> 이렇게!</li>\n<li>state를 수정할땐 <code class=\"language-text\">mutations</code>를 사용하자!</li>\n</ol>\n<h2 id=\"그런데요-mutations에-사용해도되지않을까요\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%B0%EB%8D%B0%EC%9A%94-mutations%EC%97%90-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%8F%84%EB%90%98%EC%A7%80%EC%95%8A%EC%9D%84%EA%B9%8C%EC%9A%94\" aria-label=\"그런데요 mutations에 사용해도되지않을까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그런데요 mutations에 사용해도되지않을까요?</h2>\n<p>예를들어</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n     <span class=\"token operator\">...</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n\r\n  <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// 이런식으로..</span>\r\n  <span class=\"token function\">함수</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    axios<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\r\n\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<p>위와 같이 사용하면 안된다. 왜냐하면,<br/>\r\n<code class=\"language-text\">ajax처럼 오래걸리는 코드를 적으면 나중에 길게 코드짤 때 힘들어져서 그렇다고한다.</code></p>\n<blockquote>\n<p>코딩애플은 예시를들어서 name과 age를 수정하는 ajax요청이 각각 필요한데 만약 3초이상 걸리는 코드들이라면 age가 먼저 바뀔수도있는등 나중에 의도치않은 버그가 생길 수 있다고하는데.. 이거야 어떻게든 해결할 수 있겠지만, 그 해결하기위해선 코드가 길어질수밖에 없는데 이 길어지는 코드때문인것 같다.\r\n<br/></p>\n</blockquote>\n<p>그래서 state를 수정하는 mutations 함수는 ajax코드를 넣지말고,\r\n순수하게 state 변경만 하는 함수로 만들어두자.</p>\n<p>ajax코드는 <code class=\"language-text\">actions</code> 안에 넣어주자.</p>\n<blockquote>\n<p>출처: 코딩애플</p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#actions\">actions</a></p>\n<ul>\n<li><a href=\"#%ED%95%B5%EC%8B%AC-%ED%82%A4%EC%9B%8C%EB%93%9C\">핵심 키워드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8%EB%9F%B0%EB%8D%B0%EC%9A%94-mutations%EC%97%90-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%8F%84%EB%90%98%EC%A7%80%EC%95%8A%EC%9D%84%EA%B9%8C%EC%9A%94\">그런데요 mutations에 사용해도되지않을까요?</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 01, 2023","title":"actions","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue05/"}},"prev":{"id":"d89b38de-90b8-5ba9-beda-b5cc829be292","html":"<h2 id=\"vuex\" style=\"position:relative;\"><a href=\"#vuex\" aria-label=\"vuex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vuex</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install vuex@next --save</code></pre></div>\n<p>데이터들을 한곳에 몰아넣고 사용함.\r\n리액트로따지면 리덕스,리코일 등등 같음</p>\n<p>단점으로는 코드가 길어질 수 있고, 간단한 수정기능을 만드는데도 코드가 되게 길어짐</p>\n<p>그래서 데이터 관리를 많이 안하는 웹이면 <code class=\"language-text\">Vuex를</code>를 사용하고,\r\n간단한 웹은 <code class=\"language-text\">mitt</code>를 사용하자!</p>\n<h2 id=\"사용\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9\" aria-label=\"사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용</h2>\n<p>src/store.js (store라고 작명하는게 보통 관습임)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// state를 저장하고싶으면 여기에,</span>\r\n      <span class=\"token comment\">//ex)</span>\r\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'kim'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span></code></pre></div>\n<p>src/main.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> mitt <span class=\"token keyword\">from</span> <span class=\"token string\">'mitt'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> emitter <span class=\"token operator\">=</span> <span class=\"token function\">mitt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> emitter<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store.js'</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고로 전 게시글 mitt사용법의 main.js와 연동되어있다.\r\n달라진점은 import store와, <code class=\"language-text\">app.use(store).</code>밖에없다.</p>\n<p>여기까지 세팅해주면 모든 컴포넌트에서 데이터(state)를 사용할 수 있다.\r\n완전 리액트 리덕스같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 안녕 kim이 출력된다.</span>\r\n<span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>안녕 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span></code></pre></div>\n<p>state를 이런식으로 바로 변경도 가능하다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>안녕 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"$store.state.name = '박'\"</span><span class=\"token operator\">></span>버튼<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n  <span class=\"token comment\">// 버튼 누르면 안녕 박 출력됨</span></code></pre></div>\n<p>근데 Vuex법칙중 하나가, 데이터를 직접 수정하면 안된다고한다.\r\n데이터 추적이 어렵기때문에(리덕스도 그랬음)</p>\n<h2 id=\"state-수정하는-법\" style=\"position:relative;\"><a href=\"#state-%EC%88%98%EC%A0%95%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\"state 수정하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State 수정하는 법</h2>\n<p>Vuex의 데이터를 수정하려면 다음과 같은 방법을 따르면된다.</p>\n<ol>\n<li>store.js에 state수정 방법을 정의하고(mutations사용),</li>\n<li>store.js에 부탁하자. ($store.commit(”) 사용)\r\n<br/></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'kim'</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\">// 수정방법 정의하는 곳</span>\r\n  <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">nameChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> newName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      state<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> newName<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 사용</span>\r\n<span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>안녕 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"$store.commit('nameChange', 'park')\"</span><span class=\"token operator\">></span>버튼<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#vuex\">Vuex</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9\">사용</a></li>\n<li><a href=\"#state-%EC%88%98%EC%A0%95%ED%95%98%EB%8A%94-%EB%B2%95\">State 수정하는 법</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 01, 2023","title":"Vuex","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue04/"}},"site":{"siteMetadata":{"siteUrl":"https://jungsikjeong.github.io","comments":{"utterances":{"repo":"jungsikjeong/jungsikjeong.github.io"}}}}},"pageContext":{"slug":"/vue/vue03/","nextSlug":"/vue/vue05/","prevSlug":"/vue/vue04/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}