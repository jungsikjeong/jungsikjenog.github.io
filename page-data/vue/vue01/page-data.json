{"componentChunkName":"component---src-templates-blog-template-js","path":"/vue/vue01/","result":{"data":{"cur":{"id":"fdc1986d-c82b-5b51-b150-85605ef18eae","html":"<blockquote>\n<p>출처 코딩애플</p>\n</blockquote>\n<h2 id=\"개념\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90\" aria-label=\"개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념</h2>\n<p>특정 URL로 접속할 때 코드를 실행하고 싶은 경우 사용한다.\r\n예를들면 로그인 유무에따른 페이지를 보여줘야할 때 <code class=\"language-text\">Navigation guards</code>를 사용하면 된다.</p>\n<p>리액트로 따지면 hook같은거라고 생각하자.</p>\n<h2 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/hello'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> HelloWorld<span class=\"token punctuation\">,</span>\r\n    <span class=\"token function-variable function\">beforeEnter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> to<span class=\"token punctuation\">.</span>fullPath<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>파라미터는 두세개 작명 가능하다.</li>\n<li>첫 파라미터는 목적지 페이지,</li>\n<li>둘째 파라미터는 출발 페이지다.</li>\n</ol>\n<p><code class=\"language-text\">$route</code>라는 변수랑 똑같이 이용이 가능하다.\r\n예를들면 <code class=\"language-text\">to.fullPath</code>하면 전체 경로를 알려주고,<code class=\"language-text\">to.params.id</code>하면 id파라미터를 알려준다.</p>\n<blockquote>\n<p>return false는 라우팅을 중단시킨다. return이 없으면 원래의 route인 /hello로 이동시켜준다.</p>\n</blockquote>\n<h3 id=\"여러개의-route에-navigation-guard를-추가하고-싶으면\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-route%EC%97%90-navigation-guard%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9C%BC%EB%A9%B4\" aria-label=\"여러개의 route에 navigation guard를 추가하고 싶으면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러개의 route에 navigation guard를 추가하고 싶으면?</h3>\n<p><code class=\"language-text\">.beforeEach()</code>혹은 <code class=\"language-text\">beforeResolve()</code>를 사용하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> 어쩌구 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">//페이지 변경 전에 실행할 코드</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>라우팅 하고나서 뭔가 실행하고 싶으면 <code class=\"language-text\">afterEach()</code>를 사용하면 된다.</p>\n<h3 id=\"vue-컴포넌트-안에서도-navigation-guard사용가능\" style=\"position:relative;\"><a href=\"#vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%95%88%EC%97%90%EC%84%9C%EB%8F%84-navigation-guard%EC%82%AC%EC%9A%A9%EA%B0%80%EB%8A%A5\" aria-label=\"vue 컴포넌트 안에서도 navigation guard사용가능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 컴포넌트 안에서도 navigation guard사용가능</h3>\n<p>리액트로 치면 useEffect()같다.</p>\n<p>created(), mounted() 이런거랑 비슷하게 활용이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">beforeRouteEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">beforeRouteUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 두 코드를 <code class=\"language-text\">lifecycle hook</code>쓰는 위치에다가 쓰면 된다.</p>\n<ul>\n<li>파라미터 두개 입력 가능 - 목적지 to, 출발지 form</li>\n<li><code class=\"language-text\">특정 페이지에 접속했을때 ajax요청할 일이 있으면 사용하자.</code></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90\">개념</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\">사용법</a></p>\n<ul>\n<li><a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-route%EC%97%90-navigation-guard%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9C%BC%EB%A9%B4\">여러개의 route에 navigation guard를 추가하고 싶으면?</a></li>\n<li><a href=\"#vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%95%88%EC%97%90%EC%84%9C%EB%8F%84-navigation-guard%EC%82%AC%EC%9A%A9%EA%B0%80%EB%8A%A5\">Vue 컴포넌트 안에서도 navigation guard사용가능</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"출처 코딩애플 개념 특정 URL로 접속할 때 코드를 실행하고 싶은 경우 사용한다.\r\n예를들면 로그인 유무에따른 페이지를 보여줘야할 때 를 사용하면 된다. 리액트로 따지면 hook같은거라고 생각하자. 사용법 파라미터는 두세개 작명 가능하다. 첫 파라미터는 목적지 페이지, 둘째 파라미터는 출발 페이지다. 라는 변수랑 똑같이 이용이 가능하다.\r\n예를들면 하면 전체 경로를 알려주고,하면 id파라미터를 알려준다. return false는 라우팅을 중단시킨다. return이 없으면 원래의 route인 /hello로 이동시켜준다. 여러개의 route에 navigation guard를 추가하고 싶으면? 혹은 를 사용하자. 라우팅 하고나서 뭔가 실행하고 싶으면 를 사용하면 된다. Vue 컴포넌트 안에서도 navigation guard사용가능 리액트로 치면 useEffect()같다. created(), mounted() 이런거랑 비슷하게 활용이 가능하다. 위의 두 코드를 쓰는 위치에다가 쓰면 된다.…","frontmatter":{"date":"December 30, 2023","title":"Navigation guards","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue01/"}},"next":{"id":"4cdd1f01-26cf-56ee-ad44-b9fe18eb5a32","html":"<blockquote>\n<p>출처 코딩애플</p>\n</blockquote>\n<p>vue에서 애니메이션 주는 방법이 두가지가 있다고 한다.</p>\n<h2 id=\"css로-애니메이션-만들기\" style=\"position:relative;\"><a href=\"#css%EB%A1%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"css로 애니메이션 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css로 애니메이션 만들기</h2>\n<p>첫번째 방법으로는, <br/></p>\n<ol>\n<li>애니메이션 시작 전 class를 디자인하고,</li>\n<li>애니메이션 동작 후 class를 디자인한다.</li>\n<li>원할 때 애니메이션 동작 후 class를 부착하면된다.</li>\n</ol>\n<p>코드로 예시를 들면 이렇다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>Modal\r\n      <span class=\"token operator\">:</span>원룸들<span class=\"token operator\">=</span><span class=\"token string\">\"원룸들\"</span>\r\n      <span class=\"token operator\">:</span>누른거<span class=\"token operator\">=</span><span class=\"token string\">\"누른거\"</span>\r\n      <span class=\"token operator\">:</span>모달창열렸니<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니\"</span>\r\n      @closeModal<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니 = false\"</span>\r\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n\r\n <span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> all 1s<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>div태그에 class명을 start로 붙여놓고, 클릭했을때 end class를 붙이고, 떼는건데\r\nvue에서는 조건문으로 이런식으로 코드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span> <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"{ end: 모달창열렸니 }\"</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>Modal\r\n      <span class=\"token operator\">:</span>원룸들<span class=\"token operator\">=</span><span class=\"token string\">\"원룸들\"</span>\r\n      <span class=\"token operator\">:</span>누른거<span class=\"token operator\">=</span><span class=\"token string\">\"누른거\"</span>\r\n      <span class=\"token operator\">:</span>모달창열렸니<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니\"</span>\r\n      @closeModal<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니 = false\"</span>\r\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>데이터 바인딩과 비슷하게, 클래스 바인딩을 할 수있다.\r\n<code class=\"language-text\">:class=\"{ end: 모달창열렸니 }</code> 모달창열렸니 이 부분이 true라면 class명에 end가 부착이된다.</p>\n<h2 id=\"더-간단하게-transition이용하기\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-transition%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"더 간단하게 transition이용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 간단하게 <Transition>이용하기</h2>\n<p>두번째 방법으로 vue에서 제공하는 <code class=\"language-text\">Transition</code>태그를 이용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>Transition name<span class=\"token operator\">=</span><span class=\"token string\">\"fade\"</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>Modal\r\n      <span class=\"token operator\">:</span>원룸들<span class=\"token operator\">=</span><span class=\"token string\">\"원룸들\"</span>\r\n      <span class=\"token operator\">:</span>누른거<span class=\"token operator\">=</span><span class=\"token string\">\"누른거\"</span>\r\n      <span class=\"token operator\">:</span>모달창열렸니<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니\"</span>\r\n      @closeModal<span class=\"token operator\">=</span><span class=\"token string\">\"모달창열렸니 = false\"</span>\r\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Transition<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n<span class=\"token operator\">...</span>\r\n\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\r\n<span class=\"token comment\">/* 애니메이션 동작전 스타일 */</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>enter<span class=\"token operator\">-</span>from <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>1000px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>enter<span class=\"token operator\">-</span>active <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> all 1s<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token comment\">/* 애니메이션 동작 후 스타일 */</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>enter<span class=\"token operator\">-</span>to <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>0px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">/* 퇴장 애니메이션 동작전 스타일 */</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>leave<span class=\"token operator\">-</span>from <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>leave<span class=\"token operator\">-</span>active <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> all 1s<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token comment\">/* 퇴장 애니메이션 동작 후 스타일 */</span>\r\n<span class=\"token punctuation\">.</span>fade<span class=\"token operator\">-</span>leave<span class=\"token operator\">-</span>to <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\r\n</code></pre></div>\n<p><code class=\"language-text\">Transition</code>태그의 name이름은 아무렇게나 작명가능한데, 위의예시 코드에서는 fade로 이름을 주었다.\r\n그러면 css코드로 fade-어쩌구-to 이런식으로 지어주면된다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#css%EB%A1%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\">css로 애니메이션 만들기</a></li>\n<li><a href=\"#%EB%8D%94-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-transition%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\">더 간단하게 <Transition>이용하기</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 28, 2023","title":"vue에서 UI 애니메이션 주는법 두가지","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue00/"}},"prev":{"id":"909cfcca-394c-5caa-a9af-7316288dbdbb","html":"<blockquote>\n<p>계속 사용법 까먹어서 쓰는 글\r\n<br/>\r\nVue에서 하위컴포넌트에서 상위컴포넌트로 이벤트를 전파 할 수 있는데, 이것을 대충 커스텀 이벤트라고한다.</p>\n</blockquote>\n<h2 id=\"하위-컴포넌트에서-상위-컴포넌트로-이벤트-전파\" style=\"position:relative;\"><a href=\"#%ED%95%98%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-%EC%83%81%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8C\" aria-label=\"하위 컴포넌트에서 상위 컴포넌트로 이벤트 전파 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하위 컴포넌트에서 상위 컴포넌트로 이벤트 전파</h2>\n<ul>\n<li>대충 하위컴포넌트라고 생각</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token operator\">&lt;</span>textarea\r\n    <span class=\"token operator\">=</span><span class=\"token string\">\"write-box\"</span>\r\n    @input<span class=\"token operator\">=</span><span class=\"token string\">\"$emit('write', $event.target.value)\"</span>\r\n <span class=\"token operator\">></span>\r\n    글을 작성해보세요<span class=\"token operator\">!</span>\r\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>대충 상위컴포넌트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>Container\r\n    @write<span class=\"token operator\">=</span><span class=\"token string\">\"writeText = $event\"</span>\r\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\r\n\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> Container <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">writeText</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>이렇게 해주면 상위컴포넌트의 데이터의 <code class=\"language-text\">writeText</code>에 값이 저장된다.</p>\n<p><code class=\"language-text\">$emit('작명',함수 혹은 이벤트)</code>로 상위컴포넌트에 전달할 이벤트명을 보내주면된다.</p>\n<p>사용은 상위컴포넌트에서\r\n<code class=\"language-text\">@write=\"writeText = $event\"</code> 이런식으로 @작명한이벤트명으로 연결해주면 된다.</p>\n<blockquote>\n<p>출처 코딩애플</p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%95%98%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-%EC%83%81%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8C\">하위 컴포넌트에서 상위 컴포넌트로 이벤트 전파</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 31, 2023","title":"커스텀 이벤트","categories":"vue","author":"정중식","emoji":"✍"},"fields":{"slug":"/vue/vue02/"}},"site":{"siteMetadata":{"siteUrl":"https://jungsikjeong.github.io","comments":{"utterances":{"repo":"jungsikjeong/jungsikjeong.github.io"}}}}},"pageContext":{"slug":"/vue/vue01/","nextSlug":"/vue/vue00/","prevSlug":"/vue/vue02/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}