{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4d24db26-9e0f-536a-b07a-ce9dc8e07e5d","excerpt":"화살표 함수의 특징 화살표 함수에는 ‘this’가 없다.  화살표 함수는 this를 내부가 아닌, 외부에서 가져온다.\r\n그렇기 때문에 다음과 같은 코드를 작성할 수 있다. 화살표 함수는 new와 함께 실행할 수 없다. 가 없기때문에, 화살표함수는 생성자 함수로 사용할 수 없다는 제약이 있다. arguments가 없다. arguments란? 일반 함수와는 다르게 모든 인수에 접근할 수 있게 해주는 유사 배열 객체를 arguments라고 한다. 참조 모던 자바스크립트 화살표 함수에는 ‘this’가 없다. 화살표 함수는 new와 함께 실행할 수 없다. arguments가 없다. 참조","frontmatter":{"categories":"javascript","title":"화살표 함수의 특징","date":"January 30, 2024"},"fields":{"slug":"/javascript/javascript03/"}}},{"node":{"id":"909cfcca-394c-5caa-a9af-7316288dbdbb","excerpt":"계속 사용법 까먹어서 쓰는 글\r\n\r\nVue에서 하위컴포넌트에서 상위컴포넌트로 이벤트를 전파 할 수 있는데, 이것을 대충 커스텀 이벤트라고한다. 하위 컴포넌트에서 상위 컴포넌트로 이벤트 전파 대충 하위컴포넌트라고 생각 대충 상위컴포넌트 이렇게 해주면 상위컴포넌트의 데이터의 에 값이 저장된다. 로 상위컴포넌트에 전달할 이벤트명을 보내주면된다. 사용은 상위컴포넌트에서\r\n 이런식으로 @작명한이벤트명으로 연결해주면 된다. 출처 코딩애플 하위 컴포넌트에서 상위 컴포넌트로 이벤트 전파","frontmatter":{"categories":"vue","title":"커스텀 이벤트","date":"December 31, 2023"},"fields":{"slug":"/vue/vue02/"}}},{"node":{"id":"fdc1986d-c82b-5b51-b150-85605ef18eae","excerpt":"출처 코딩애플 개념 특정 URL로 접속할 때 코드를 실행하고 싶은 경우 사용한다.\r\n예를들면 로그인 유무에따른 페이지를 보여줘야할 때 를 사용하면 된다. 리액트로 따지면 hook같은거라고 생각하자. 사용법 파라미터는 두세개 작명 가능하다. 첫 파라미터는 목적지 페이지, 둘째 파라미터는 출발 페이지다. 라는 변수랑 똑같이 이용이 가능하다.\r\n예를들면 하면 전체 경로를 알려주고,하면 id파라미터를 알려준다. return false는 라우팅을 중단시킨다. return이 없으면 원래의 route인 /hello로 이동시켜준다. 여러개의 route에 navigation guard를 추가하고 싶으면? 혹은 를 사용하자. 라우팅 하고나서 뭔가 실행하고 싶으면 를 사용하면 된다. Vue 컴포넌트 안에서도 navigation guard사용가능 리액트로 치면 useEffect()같다. created(), mounted() 이런거랑 비슷하게 활용이 가능하다. 위의 두 코드를 쓰는 위치에다가 쓰면 된다.…","frontmatter":{"categories":"vue","title":"Navigation guards","date":"December 30, 2023"},"fields":{"slug":"/vue/vue01/"}}},{"node":{"id":"4cdd1f01-26cf-56ee-ad44-b9fe18eb5a32","excerpt":"출처 코딩애플 vue에서 애니메이션 주는 방법이 두가지가 있다고 한다. css로 애니메이션 만들기 첫번째 방법으로는,  애니메이션 시작 전 class를 디자인하고, 애니메이션 동작 후 class를 디자인한다. 원할 때 애니메이션 동작 후 class를 부착하면된다. 코드로 예시를 들면 이렇다. div태그에 class명을 start로 붙여놓고, 클릭했을때 end class를 붙이고, 떼는건데\r\nvue에서는 조건문으로 이런식으로 코드를 작성한다. 데이터 바인딩과 비슷하게, 클래스 바인딩을 할 수있다.\r\n 모달창열렸니 이 부분이 true라면 class명에 end가 부착이된다. 더 간단하게 이용하기 두번째 방법으로 vue에서 제공하는 태그를 이용하면 된다. 태그의 name이름은 아무렇게나 작명가능한데, 위의예시 코드에서는 fade로 이름을 주었다.\r\n그러면 css코드로 fade-어쩌구-to 이런식으로 지어주면된다. css로 애니메이션 만들기 더 간단하게 이용하기","frontmatter":{"categories":"vue","title":"vue에서 UI 애니메이션 주는법 두가지","date":"December 28, 2023"},"fields":{"slug":"/vue/vue00/"}}},{"node":{"id":"3b9a2842-29e4-50d7-b95f-f63e0e8f1f19","excerpt":"프로그래머스 FE채용과제로 배우는 자바스크립트 강의중, 테스트를 다시 보면서 공부하던중 제가 직접 구현한 코드입니다. 구현 과제 OS의 다크모드의 활성화 여부를 기반으로 동작하게 하되, 유저가 테마를 토글링 할 수 있도록 좌측 상단에 해당 기능을 토글하는 체크박스를 만드는거였다. 나는 여기서 추가로 로컬스토리지를 추가하여, 처음 사용자가 웹에 접속하면 OS기반으로 다크모드를 적용시켜주고, 사용자가 토글버튼을 눌러서 다크모드의 활성화 여부를 로컬스토리지에 적용시켜, 다음 접속시 사용자가 설정한 값으로 적용이되게끔 사용자 편의성 측면에서 문제를 접근하여 추가로 구현을 해주었다. 구현 코드 사용자가 현재 웹 사이트에서 설정한 테마, 현재 사용자의 os테마 각각의 변수를 설정후 값을 대입 시켜주고,\r\n그 값들을 조건문을 사용하여 값을 변경해주었다. 전체 코드 구현 과제 구현 코드 전체 코드","frontmatter":{"categories":"stepByStep","title":"다크모드 구현","date":"December 19, 2023"},"fields":{"slug":"/StepBystep/StepBystep00/"}}},{"node":{"id":"eed546dd-e460-5550-9bd2-5440fe60a388","excerpt":"부분만이라도 읽어보세요! 클로저 핵심 요약 외부 변수를 기억하고 이 외부 변수에 접근할 수 있는 함수를 의미한다. 자바스크립트에선 모든 함수가 자연스럽게 클로저가 된다. (예외가 있긴함) 클로저의 개념 클로저는 내부 함수에서 외부 함수의 범위에 대한 접근을 제공하는 개념이다.\r\n자바스크립트에서 클로저는 함수 생성 시  - 그렇기 때문에  다음은 mdn에서 긁어온 코드이다.\r\n어휘적 범위 지정(렉시컬 스코프)환경을 고려해서 살펴보면.. 위의코드를 간단하게 풀어보자면, 중첩함수인  내부엔 자신만의 지역변수가 없지만\r\n내부 함수에서 외부 함수에 접근할 수 있기 때문에\r\n함수에 선언된 지역 변수인 name에 접근할 수 있는 것 이다.\r\n이렇게 내부에서 외부에 접근할 수 있는것. 이것을 의 개념이다. 조금 더 깊숙히 속담에 호랑이를 잡기 위해선 호랑이 굴로 들어가야한다고 한다.\r\n클로저라는 호랑이를 잡기위해 호랑이 굴로 들어가보자. 왜 그런걸까? 이러한 결과값에 대해서 mdn에서는 자바스크…","frontmatter":{"categories":"javascript","title":"클로저와 [[Environment]]","date":"December 05, 2023"},"fields":{"slug":"/javascript/javascript02/"}}},{"node":{"id":"cf2c997a-6d81-5e3f-8c6c-5c1528caaec9","excerpt":"12월 4일 팀 프로젝트 작업과 모던 자바스크립트를 공부했다. 제품 상세페이지 캐러셀을 mui에 내장되어있는거를 사용하지않고, Swiper 라이브러리를 사용하기로 해서 적용시켜줬다.\r\n금방 적용시킬줄 알았는데 생각보다 시간을 잡아먹었다.\r\n이제 프로그래스바를 만들면되는데 내장되어있는거를 사용하여 구현은 했으나, 디자인과는 좀 레이아웃이 달라서 이 부분을 수정하는데에 또 시간이 들것같다. 모던 자바스크립트 파트를 공부했다. 스프레드 문법으로 배열을 복사하게되면, 참조하는 값이 달라진다.(포인터가 달라짐) 12월 5일 모던자바스크립트 변수의 유효범위와 클로저와 함수의 렉시컬환경및변수와 [[Environment]]의 연관성 학습 및 정리 12월 6일 모던 자바스크립트 파트 공부 팀 프로젝트에서 새롭게 쓰이는 스토리북 공부…(애먹는중) 스토리북의 개념은 알게되었다. 공통컴포넌트들을 스토리북과 연동시키게되면 좀 더 나은 범용성이높은 컴포넌트로 리팩토링되는것 같다는걸 알게됬다. 카테고리 컴포…","frontmatter":{"categories":"TIL","title":"기록4","date":"December 04, 2023"},"fields":{"slug":"/TIL/TIL4/"}}},{"node":{"id":"6745f343-ee1e-51f8-96d1-65c87448905b","excerpt":"이 게시글은 이곳을 참고하여 요약하여 작성하였습니다. MUI MUI는 리액트 라이브러리 중 하나로 MUI는 구글의 디자인 철학인 을 구현한 자바스크립트 라이브러리입니다. 실은 materialUI라고 불리던 MUI는 5버전으로 리뉴얼 되면서 기존의 materialUI라는 이름을 버리고 MUI라는 이름으로 바뀌었다고 합니다. mui의 sx와 inline style의 차이점 원문 게시글을 요약하는 게시글이기 때문에 여기부턴 편하게 글을 작성하겠습니다. inline style html을 반환하는 jsx 문법은 react가 변환할 때 모든 속성이 props 객체의 일부가 된다. 따라서 랜더링때마다 style 객체가 계산되어 성능과 재사용 부분에서 추천하지 않는다.  Mui sx sx의 사용예시는 inline style과 비슷하다. styled-component화 되어 적용된다. mui의 theme를 기반으로 css를 적용할 수 있다. (다크모드,미디어 쿼리,css단축약어 적용 등..) 재사…","frontmatter":{"categories":"css mui","title":"Mui Box와 div차이, Mui sx와 inline style의 차이 이해하기","date":"November 29, 2023"},"fields":{"slug":"/css/css00/"}}},{"node":{"id":"6142d7c6-f210-5731-a162-2a9e969c8d91","excerpt":"11월 22일 팀 프로젝트 작업 새롭게 디자인된 제품 상세페이지 css 작업 로딩때 스켈레톤 이미지 보여주는 작업 11월 23일 ~ 11월 24일 팀 프로젝트 작업 새롭게 디자인된 제품 상세페이지 css 작업을 했다. (1200px 사이즈로 리디자인됨) 리뷰 컴포넌트 css 작업 제품 상세페이지에 들어가는 리뷰 컴포넌트가 있는데, 고민을 좀 많이했다.\r\n메인 페이지에 있는 리뷰와 제품 상세페이지 리뷰 UI가 겹쳐서 공통컴포넌트로 만들까 고민을했었는데\r\n프론트 리더분께서 공통 컴포넌트 기준은 데이터 기준으로 하는게 나을거라고하셔서 그 말을 따랐다. 그럼 여기서 다시 고민이 되는게, 기존 작업자가 해놓은 리뷰 UI를 그대로 가져다 쓰느냐, 아니면 내가 다시 작업해서 쓰느냐인데\r\n많은 고민끝에 후자로 결정했다. 11월 25일 휴식 11월 26일 팀 프로젝트 작업 팀 프로젝트에서 사용하는 Flex-box 컴포넌트를 리팩토링 했다. 기존에 사용하던 스타일 컴포넌트인 flex-box는 인라인…","frontmatter":{"categories":"TIL","title":"기록3","date":"November 22, 2023"},"fields":{"slug":"/TIL/TIL3/"}}},{"node":{"id":"2dd77917-26e4-5478-a990-4779ef990ddb","excerpt":"11월7일 팀 프로젝트 - 제품 상세페이지 css 작업 완료 프론트엔드 개발자 회의 각자 해야할 파트 상세하게 적기 (노션) 모던 자바스크립트 공부(객체: 기본 파트 공부완료) 가비지 컬렉션 : 눈에 보이지 않는 메모리 관리 수행 this: 화살표함수의 this와 메서드의 this는 동작방식이 다름 옵셔널 체이닝 ’?’: ?. 앞의 대상이 undefined나 null이면 평가를 멈추고 undefined을 반환한다. 모던 자바스크립트 공부(자료구조와 자료형 파트중에서 다음의 섹션들 공부) 원시값의 메서드 : 원시값의 종류는 string,number,bigint,boolean,symbol,null,undefined 등 총 일곱가지다. 숫자형 문자열 배열 : 배열의 끝부터 요소를 추가하고, 빼내는 push,pop 메서드와, 배열의 맨 앞에서부터 요소를 추가하고 빼내는 shift,unshift메서드가있다.\r\n일반적으로 맨 끝에서부터 요소를 추가하고 뺴내주는 메서드가 더 빠르다. 11월7일…","frontmatter":{"categories":"TIL","title":"기록2","date":"November 07, 2023"},"fields":{"slug":"/TIL/TIL2/"}}},{"node":{"id":"d25cf002-7288-546a-994a-eb3445b139e6","excerpt":"23.11.01 모던 자바스크립트 공부/코드 품질 파트 완독 코드 품질 파트에서 섹션이 인상 깊었다.\r\n변수명 혹은 함수명을 어떤식으로 작명하면 안되는지를 유머러스하게 설명하는데 재밌었다. 팀 프로젝트  개발 카테고리 공통 컴포넌트 개발 팀 프로젝트에서 내가 맡은 분야는 제품 리스트 페이지와, 제품 상세 페이지인데\r\n제품 리스트 페이지에 들어가는 카테고리와 메인 페이지에 들어가는 카테고리가 겹치는것 같아서 카테고리 컴포넌트를 따로 만들어서 공통적으로 사용할 수 있게끔 해주었다. 제품 상세 페이지 UI 및 css 작업 오늘 작업한 페이지! 사진 코드 구조를 생각하면서 하다보니까 뭔가 작업속도가 더딘것 같다.. 23.11.02 팀 프로젝트 제품 상세페이지 UI 및 css 작업 향수의 특징을 react-apexcharts 라이브러리를 사용해 레이더 차트로 표시해주었다. 사용자가 좀 더 정확하게 향수의 특징을 볼 수 있도록 materialUI의 아코디언 메뉴를 사용해서 향수의 특징을 막대…","frontmatter":{"categories":"TIL","title":"기록1","date":"November 01, 2023"},"fields":{"slug":"/TIL/TIL1/"}}},{"node":{"id":"69e66320-3cf8-535d-a9b5-91af6a18f006","excerpt":"폴리-필(Polyfill) 이란? 브라우저에서 지원하지 않는 코드를 사용 가능한 코드 조각이나 플러그인으로 변환한 코드를 의미한다. 즉,를 의미함. 바벨(babel) 트랜스파일러(transpiler)다. 모던 자바스크립트를 구 표준을 준수하는 코드로 변환. 웹팩(webpack)과 같은 모던 프로젝트 빌드 시스템은 코드가 수정될 때마다 자동으로 트랜스파일러를 동작시켜줌. 주요역할 트랜스파일러: 코드를 재작성함 폴리필(core js, polyfill.io) 바벨과 폴리필의 차이 바벨은 ESNext 에서 지원하는 문법을 ES5 문법으로 번역해주지만, ES5에 존재하지 않는 ES6의 Map, Promise, Set, Object.assigin() 이런애들은 존재하지 않으니 번역을 해줄수가 없다. 이것을 매꾸기 위해 polyfill 을 사용한다. (Map, Promise, Set 등을 사용가능한 객체로 만들어준다) babel 은 babel-polyfill 모듈을 사용하면 되지만, 현재 de…","frontmatter":{"categories":"javascript","title":"폴리필,바벨","date":"November 01, 2023"},"fields":{"slug":"/javascript/javascript01/"}}},{"node":{"id":"48369bd4-ab67-58b4-ab62-253424b05811","excerpt":"웹페이지에 생동감을 불어 넣기 위해 만들어진 프로그래밍 언어 자바스크립트로 작성한 프로그램을 script 라고 불림 script는 웹페이지의 HTML 안에 작성 가능한데, 웹페이지를 불러올 때 script가 자동으로 실행 됨 자바스크립트 동작 환경 자바스크립트는 브라우저뿐만 아니라 서버에서도 실행 할 수 있다. 이 외에도 자바스크립트 엔진이라 불리는 특별한 프로그램이 있는 모든 디바이스에서도 동작한다. 의 종류는 다양하다. ex) V8(Chrome과 Opera에서 사용), SpiderMonkey(Firefox에서 사용), IE 기타 등등.. 엔진은 어떻게 동작할까? 엔진의 기본 원리는 다음과 같다. 파싱: 엔진이 스크립트를 읽는 단계 컴파일: 읽어 들인 스크립트를 기계어로 전환하는 단계 실행: 기계어로 전환된 코드가 실행되는 단계, 기계어로 전환되었기에 실행 속도 빠름   자바스크립트의 강점 HTML/CSS와 완전히 통합할 수 있음 간단한 일은 간단하게 처리할 수 있게 해줌 모든 …","frontmatter":{"categories":"javascript","title":"자바스크립트란?","date":"October 20, 2023"},"fields":{"slug":"/javascript/javascript00/"}}},{"node":{"id":"6f16a4f0-c4f9-5de8-aa32-c70d842d3897","excerpt":"Composition API를 쓰면 관련있는 코드를 한 곳에 모을 수 있다. 기존에는 이렇게 사용했다면.. 기존에는 methods함수 안에 뭔가를 적고 사용하고 이런식의 방식이였다.\r\n이런 방식, 기존방식을 Options API라고칭한다. Composition API created hook 임 setup setup(){}을 사용해주면 된다.\r\n컴포넌트를 생성하기전에, 이 코드가 먼저 실행된다.  이곳에 데이터 생성 및 조작과 methods를 만들 수 있고, hook도 걸 수 있다. 거의 모든 기능개발을 setup 한 곳에서 가능하다. setup()안에서 데이터 생성 ref(데이터) setup()안에서 데이터 생성은 ref()를 사용하면 되고,\r\nreturn{}으로 그걸 리턴해주면된다. ref()에 데이터를 넣는 이유는,\r\nvue에서 데이터가 바뀌면 실시간으로 랜더링이 일어날 수 있는 이유는 바로 데이터 타입이 reference data type이기 때문인데, 이 타입을 감지해서 랜…","frontmatter":{"categories":"vue","title":"Composition API","date":"January 02, 2023"},"fields":{"slug":"/vue/vue07/"}}},{"node":{"id":"fa7397df-b906-5dd4-8ca7-4ce6770a6a30","excerpt":"npm i mitt  라이브러리니깐\r\n터미널로 설치해주자. Vuex의 개념까지 알고 다시와봤는데, mitt는 리액트로따지면 contextAPI같은거라고 생각함 사용 main.js 는 글로벌한 변수 보관함이라고 생각하자. 모든 컴포넌트에서 자주 사용하는 라이브러리가있다면 등록해서 사용할 수있다.\r\n예를들면 이렇게 해주면\r\nimport axios 해 올 필요 없이 this.axios로 사용이 가능해진다. mitt라이브러리로 데이터를 전송할 때 다음과 같이 두가지만 기억하면된다. this.emitter.emit()로 전송하고, this.emitter.on()으로 수신한다. 이제 본격적으로 mitt라이브러리를 사용해서 컴포넌트간 데이터를 전송해보자.  이런식으로 데이터를 쏴주고, 으로 데이터를 수신해주면 된다.\r\n중요한건 항상 mounted(){}안에서 사용해줘야한다. 그리고 개인적인 생각인데 이거 말고 이렇게 사용해주는 이유는.. 크게 상관은없지만 자바스크립트의 this때문이 아닌가 싶…","frontmatter":{"categories":"vue","title":"mitt - 컴포넌트간 데이터 전송","date":"January 01, 2023"},"fields":{"slug":"/vue/vue03/"}}},{"node":{"id":"d89b38de-90b8-5ba9-beda-b5cc829be292","excerpt":"Vuex 데이터들을 한곳에 몰아넣고 사용함.\r\n리액트로따지면 리덕스,리코일 등등 같음 단점으로는 코드가 길어질 수 있고, 간단한 수정기능을 만드는데도 코드가 되게 길어짐 그래서 데이터 관리를 많이 안하는 웹이면 를 사용하고,\r\n간단한 웹은 를 사용하자! 사용 src/store.js (store라고 작명하는게 보통 관습임) src/main.js 참고로 전 게시글 mitt사용법의 main.js와 연동되어있다.\r\n달라진점은 import store와, 밖에없다. 여기까지 세팅해주면 모든 컴포넌트에서 데이터(state)를 사용할 수 있다.\r\n완전 리액트 리덕스같다. state를 이런식으로 바로 변경도 가능하다 근데 Vuex법칙중 하나가, 데이터를 직접 수정하면 안된다고한다.\r\n데이터 추적이 어렵기때문에(리덕스도 그랬음) State 수정하는 법 Vuex의 데이터를 수정하려면 다음과 같은 방법을 따르면된다. store.js에 state수정 방법을 정의하고(mutations사용), store.j…","frontmatter":{"categories":"vue","title":"Vuex","date":"January 01, 2023"},"fields":{"slug":"/vue/vue04/"}}},{"node":{"id":"3a9fedd2-16a6-5db8-92b5-9ff7c16b086e","excerpt":"actions Vuex.. ajax하는 곳 혹은 오래걸리는 작업들에 사용 사용예시 핵심 키워드 안에서 store의 state를 가져다 쓰려면 를 사용해서 불러오자. mutations안의 함수를 사용할땐  이렇게! state를 수정할땐 를 사용하자! 그런데요 mutations에 사용해도되지않을까요? 예를들어 위와 같이 사용하면 안된다. 왜냐하면,\r\n 코딩애플은 예시를들어서 name과 age를 수정하는 ajax요청이 각각 필요한데 만약 3초이상 걸리는 코드들이라면 age가 먼저 바뀔수도있는등 나중에 의도치않은 버그가 생길 수 있다고하는데.. 이거야 어떻게든 해결할 수 있겠지만, 그 해결하기위해선 코드가 길어질수밖에 없는데 이 길어지는 코드때문인것 같다.\r\n 그래서 state를 수정하는 mutations 함수는 ajax코드를 넣지말고,\r\n순수하게 state 변경만 하는 함수로 만들어두자. ajax코드는  안에 넣어주자. 출처: 코딩애플 actions 핵심 키워드 그런데요 mutation…","frontmatter":{"categories":"vue","title":"actions","date":"January 01, 2023"},"fields":{"slug":"/vue/vue05/"}}},{"node":{"id":"9226e84a-499b-541c-b90f-1520e7898b3a","excerpt":"vue에는 computed()와, methods()가 존재한다. 어떤 차이점이있을까? computed 함수는 사용해도 실행되지않는다. 처음 실행하고 값을 간직한다.(캐싱같은거같음,줄로 계산결과 저장용 함수로 사용함) computed함수는 이름만 사용해서 불러와야한다. 소괄호() 사용을하면 안된다.\r\n예를들면 이렇게 methods함수는 사용할 때마다 실행된다.\r\n mapState state 꺼내쓰는 코드가 짧아진다!  computed:{}안에 작성하는게 일반적이다! 예를들면 이렇게.. 중요한점은,\r\ncomputed함수는 꼭 을 적어줘야한다. 축약 또한 가능하다. 출처: 코딩애플 vue에는 computed()와, methods()가 존재한다. 어떤 차이점이있을까? mapState","frontmatter":{"categories":"vue","title":"computed , mapState","date":"January 01, 2023"},"fields":{"slug":"/vue/vue06/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"정중식","bio":{"role":"개발자","description":["기록이 쌓이면 뭐든된다"],"thumbnail":"me.png"},"social":{"github":"https://github.com/jungsikjeong","linkedIn":"","email":"wndtlr1024@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}